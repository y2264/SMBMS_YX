<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTDmapper3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.smbms.dao.UserDao">

    <select id="login" resultType="User">
        select *
        from smbms_user
        where userCode = #{userCode}
    </select>

    <update id="updatePwd">
        update smbms_user
        set userPassword= #{pwd}
        where id = #{id}
    </update>

    <resultMap id="UserMap" type="User">
        <id column="id" property="id"/>
        <result column="userCode" property="userCode"/>
        <result column="userName" property="userName"/>
        <result column="userPassWord" property="userPassword"/>
        <result column="gender" property="gender"/>
        <result column="birthday" property="birthday"/>
        <result column="phone" property="phone"/>
        <result column="address" property="address"/>
        <result column="createdBy" property="createdBy"/>
        <result column="creationDate" property="creationDate"/>
        <result column="modifyBy" property="modifyBy"/>
        <result column="modifyDate" property="modifyDate"/>
        <result column="userRoleName" property="userRoleName"/>
    </resultMap>

    <select id="getUserList" resultMap="UserMap">
        select u.* , r.roleName as userRoleName from smbms_user u join smbms_role r on u.userRole = r.id
        <where>
            <if test="userName != null">
                and u.userName like concat('%' , #{userName} , '%')
            </if>
            <if test="userRole != 0">
                and u.userRole = #{userRole}
            </if>
        </where>
        order by creationDate DESC
    </select>

    <select id="getUserCount" resultType="java.lang.Integer">
        select count(1) as count
        from smbms_user u,
             smbms_role r
        where u.userRole = r.id
          and u.userName like #{userName}
          and u.userRole = #{userRole}
    </select>

    <select id="selectUserCodeExist" resultType="User">
        select *
        from smbms_user
        where userCode = #{userCode}
    </select>

    <insert id="add" parameterType="User">
        insert into smbms_user (id, userCode, userName, userPassword,
                                userRole, gender, birthday, phone, address, creationDate, createdBy)
        values (default, #{userCode}, #{userName}, #{userPassword}, #{userRole}, #{gender}, #{birthday}, #{phone},
                #{address},
                #{creationDate}, #{createdBy})
    </insert>

    <select id="getUserById" resultMap="UserMap">
        select u.*, r.roleName as userRoleName
        from smbms_user u
                 join smbms_role r on u.userRole = r.id
        where u.id = #{id}
    </select>

    <delete id="deleteUserById">
        delete
        from smbms_user
        where id = #{delId}
    </delete>

    <update id="modify" parameterType="User">
        update smbms_user
        set userName= #{userName},
            gender= #{gender},
            birthday= #{birthday},
            phone= #{phone},
            address= #{address},
            userRole= #{userRole},
            modifyBy= #{modifyBy},
            modifyDate= #{modifyDate}
        where id = #{id}
    </update>

    <delete id="deleteByIds">
        delete from smbms_user where id in
        <foreach collection="strings" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
</mapper>